# -*- coding: utf-8 -*-
"""Gráfico CCI/TRI

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BTx3FMLYG1OOH-idh4-vsD3cmTcy9mKs
"""

a = 1.065 # @param {type:"number"}
b = 0.480 # @param {type:"number"}
c = 0.23 # @param {type:"number"}

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from scipy.optimize import minimize_scalar

def calcular_probabilidade(theta, a, b, c):
    """
    Calcula a probabilidade de uma resposta correta dado o nível de proficiência de um candidato e os parâmetros do item.

    Parâmetros:
        theta (float): Nível de proficiência do candidato.
        a (float): Parâmetro de discriminação.
        b (float): Parâmetro de dificuldade.
        c (float): Parâmetro de acerto ao acaso.

    Retorna:
        Probabilidade de uma resposta correta.
    """
    return c + (1 - c) / (1 + np.exp(-a * (theta - b)))

# Encontrando o valor de theta que resulta em targ
def find_theta(a, b, c, targ):
    left = -100
    right = 100
    tol = 1e-5
    target = targ
    while (right - left) / 2 > tol:
        theta = (left + right) / 2
        value = calcular_probabilidade(theta, a, b, c)
        if value > target:
            right = theta
        else:
            left = theta
    return theta * 100 + 500

# Gere valores de theta no intervalo desejado
theta_valores = np.linspace(-5, 5, 100)

# Calcule as probabilidades correspondentes
probabilidades = calcular_probabilidade(theta_valores, a, b, c)
targ = round(((1+c)/2), 2)
proficiencia=find_theta(a, b, c, targ)
proficiencia = round(proficiencia, 2)

# Traduza os valores de theta multiplicando por 100 e adicionando 500
theta_valores_traduzidos = 100 * theta_valores + 500

# Crie o gráfico
plt.figure(figsize=(8, 6))
plt.plot(theta_valores_traduzidos, probabilidades * 100, label='Probabilidade %', color='blue', linestyle='-')
plt.plot([0, proficiencia, proficiencia], [targ*100, targ*100, 0])
plt.title('Curva Característica do Item (CCI)\nA: '+str(a)+', B: '+str(b)+', C: '+str(c)+'\n\nProficiência: '+str(proficiencia)+'\n'+'('+str(targ*100)+'%)\n')
plt.xlabel('Nível de Proficiência (Θ)')
plt.ylabel('Probabilidade (%)')
plt.legend()
plt.grid(True)
plt.show()