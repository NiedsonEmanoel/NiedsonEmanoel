# Obtendo o índice da coluna NU_PARAM_B
indice_coluna <- which(names(dataParam) == "NU_PARAM_B")
# Selecionando a coluna com base no índice
coluna_NU_PARAM_B <- dataParam[, indice_coluna, drop = TRUE]
coluna_NU_PARAM_B <- as.numeric(gsub(",", ".", coluna_NU_PARAM_B))
# Selecionando a coluna com base no índice
coluna_NU_PARAM_C <- dataParam[, indice_coluna, drop = TRUE]
coluna_NU_PARAM_C <- as.numeric(gsub(",", ".", coluna_NU_PARAM_C))
#COLOCANDO VALORES PADRÕES NOS ITENS
sv <- mirt(dados, 1, itemtype = '3PL', pars = 'values')
# Verificar se há valores ausentes
print(any(is.na(coluna_NU_PARAM_A[1:45])))
print(any(is.na(coluna_NU_PARAM_B[1:45])))
print(any(is.na(coluna_NU_PARAM_C[1:45])))
# Exibir os valores das colunas
print(coluna_NU_PARAM_A[1:45])
print(coluna_NU_PARAM_B[1:45])
print(coluna_NU_PARAM_C[1:45])
#PARAMETRO A                  #I1 #I2  #I3...
sv$value[sv$name == 'a1'] <- coluna_NU_PARAM_A[1:45]
#PARAMETRO B
sv$value[sv$name == 'd'] <- coluna_NU_PARAM_B[1:45]
#PARAMETRO C
sv$value[sv$name == 'g'] <- coluna_NU_PARAM_C[1:45]
sv$est <- FALSE
# Verificar se há valores ausentes após a atribuição
print(any(is.na(sv$value)))
#CRIAÇÃO DO MODELO
tryCatch(
{
mod3 <- mirt(dados, 1, pars = sv, itemtype = '3PL')
},
error = function(e) {
cat("Erro no modelo mirt:", conditionMessage(e), "\n")
print(e)
}
)#Extrai os coeficientes e salva em um data frame
coeficientes <- coef(mod3, simplify=TRUE, IRTpars=TRUE)
round(coeficientes$items, 3)
#SCRIPT PARA PARÂMETROS JÁ FITADOS!
#install.packages("mirt")
library(mirt)
#install.packages("tidyverse")
library(tidyverse)
# install.packages("devtools")
# devtools::install_github("masurp/ggmirt")
library(ggmirt)
caminho_pasta_script <- getwd()
dados <- sim_irt(500, 5)
#COLOCANDO VALORES PADRÕES NOS ITENS
sv <- mirt(dados, 1, itemtype = '3PL', pars = 'values')
#PARAMETRO A                  #I1 #I2  #I3...
sv$value[sv$name == 'a1'] <- c(1, 0.9, 0.8, 1, 1.1)
#PARAMETRO B
sv$value[sv$name == 'd'] <- c(-1, 0, 1.5, -1.5, 0)
#PARAMETRO C
sv$value[sv$name == 'g'] <- c(0.2, 0.15, 0.17, 0.19, 0.15)
sv$est <- FALSE
#CRIAÇÃO DO MODELO
mod3 <- mirt(dados, 1, pars = sv)
#Extrai os coeficientes e salva em um data frame
coeficientes <- coef(mod3, simplify=TRUE, IRTpars=TRUE)
round(coeficientes$items, 3)
#PARAMETRO A                  #I1 #I2  #I3...
sv$value[sv$name == 'a1'] <- c(1, 0.9, 0.8, 1, 1.1)
#COLOCANDO VALORES PADRÕES NOS ITENS
sv <- mirt(dados, 1, itemtype = '3PL', pars = 'values')
#PARAMETRO A                  #I1 #I2  #I3...
sv$value[sv$name == 'a1'] <- c(1, 0.9, 0.8, 1, 1.1)
#PARAMETRO B
sv$value[sv$name == 'b'] <- c(-1, 0, 1.5, -1.5, 0)
#PARAMETRO C
sv$value[sv$name == 'g'] <- c(0.2, 0.15, 0.17, 0.19, 0.15)
sv$est <- FALSE
#CRIAÇÃO DO MODELO
mod3 <- mirt(dados, 1, pars = sv)
#Extrai os coeficientes e salva em um data frame
coeficientes <- coef(mod3, simplify=TRUE, IRTpars=TRUE)
round(coeficientes$items, 3)
sv
#SCRIPT PARA PARÂMETROS JÁ FITADOS!
#install.packages("mirt")
library(mirt)
#install.packages("tidyverse")
library(tidyverse)
# install.packages("devtools")
# devtools::install_github("masurp/ggmirt")
library(ggmirt)
caminho_pasta_script <- getwd()
#SEM HEADER
caminho_leitura <- file.path(caminho_pasta_script, "dados.txt")
dados <- read.delim(caminho_leitura, header = FALSE)
#SCRIPT PARA PARÂMETROS JÁ FITADOS!
#install.packages("mirt")
library(mirt)
#install.packages("tidyverse")
library(tidyverse)
# install.packages("devtools")
# devtools::install_github("masurp/ggmirt")
library(ggmirt)
caminho_pasta_script <- getwd()
dados <- sim_irt(500, 45)
#COLOCANDO VALORES PADRÕES NOS ITENS
sv <- mirt(dados, 1, itemtype = '3PL', pars = 'values')
#PARAMETRO A                  #I1 #I2  #I3...
sv$value[sv$name == 'a1'] <- c(2.97674, 2.74706, 1.61069, 2.91476, 2.1205, 0.29544, 0.50541, 1.57501, 1.51059, 2.79351, 1.45373, 1.94057, 3.90297, 1.54146, 0.54974, 2.66587, 0.8924, 1.44775, 2.50487, 2.3659, 2.17252, 2.35776, 2.29781, 1.28993, 3.07166, 2.01969, 2.88725, 1.71388, 2.26543, 4.28182, 3.78568, 2.76968, 2.65104, 3.45952, 1.92924, 2.42831, 1.61135, 1.01623, 1.19143, 2.54149, 2.20036, 2.66337, 2.56786, 2.00073, 2.40418)
#PARAMETRO B
sv$value[sv$name == 'd'] <- c(2.97674, 2.74706, 1.61069, 2.91476, 2.1205, 0.29544, 0.50541, 1.57501, 1.51059, 2.79351, 1.45373, 1.94057, 3.90297, 1.54146, 0.54974, 2.66587, 0.8924, 1.44775, 2.50487, 2.3659, 2.17252, 2.35776, 2.29781, 1.28993, 3.07166, 2.01969, 2.88725, 1.71388, 2.26543, 4.28182, 3.78568, 2.76968, 2.65104, 3.45952, 1.92924, 2.42831, 1.61135, 1.01623, 1.19143, 2.54149, 2.20036, 2.66337, 2.56786, 2.00073, 2.40418)
#PARAMETRO C
sv$value[sv$name == 'g'] <- c(2.97674, 2.74706, 1.61069, 2.91476, 2.1205, 0.29544, 0.50541, 1.57501, 1.51059, 2.79351, 1.45373, 1.94057, 3.90297, 1.54146, 0.54974, 2.66587, 0.8924, 1.44775, 2.50487, 2.3659, 2.17252, 2.35776, 2.29781, 1.28993, 3.07166, 2.01969, 2.88725, 1.71388, 2.26543, 4.28182, 3.78568, 2.76968, 2.65104, 3.45952, 1.92924, 2.42831, 1.61135, 1.01623, 1.19143, 2.54149, 2.20036, 2.66337, 2.56786, 2.00073, 2.40418)
sv$est <- FALSE
sv
#CRIAÇÃO DO MODELO
mod3 <- mirt(dados, 1, pars = sv)
round(coeficientes$items, 3)
#COLOCANDO VALORES PADRÕES NOS ITENS
sv <- mirt(dados, 1, itemtype = '3PL', pars = 'values')
#PARAMETRO A                  #I1 #I2  #I3...
sv$value[sv$name == 'a1'] <- c(2.97674, 2.74706, 1.61069, 2.91476, 2.1205, 0.29544, 0.50541, 1.57501, 1.51059, 2.79351, 1.45373, 1.94057, 3.90297, 1.54146, 0.54974, 2.66587, 0.8924, 1.44775, 2.50487, 2.3659, 2.17252, 2.35776, 2.29781, 1.28993, 3.07166, 2.01969, 2.88725, 1.71388, 2.26543, 4.28182, 3.78568, 2.76968, 2.65104, 3.45952, 1.92924, 2.42831, 1.61135, 1.01623, 1.19143, 2.54149, 2.20036, 2.66337, 2.56786, 2.00073, 2.40418)
sv
#PARAMETRO B
sv$value[sv$name == 'd'] <- c(2.97674, 2.74706, 1.61069, 2.91476, 2.1205, 0.29544, 0.50541, 1.57501, 1.51059, 2.79351, 1.45373, 1.94057, 3.90297, 1.54146, 0.54974, 2.66587, 0.8924, 1.44775, 2.50487, 2.3659, 2.17252, 2.35776, 2.29781, 1.28993, 3.07166, 2.01969, 2.88725, 1.71388, 2.26543, 4.28182, 3.78568, 2.76968, 2.65104, 3.45952, 1.92924, 2.42831, 1.61135, 1.01623, 1.19143, 2.54149, 2.20036, 2.66337, 2.56786, 2.00073, 2.40418)
sv
#COLOCANDO VALORES PADRÕES NOS ITENS
sv <- mirt(dados, 1, itemtype = '3PL', pars = 'values')
#PARAMETRO A                  #I1 #I2  #I3...
sv$value[sv$name == 'a1'] <- c(2.97674, 2.74706, 1.61069, 2.91476, 2.1205, 0.29544, 0.50541, 1.57501, 1.51059, 2.79351, 1.45373, 1.94057, 3.90297, 1.54146, 0.54974, 2.66587, 0.8924, 1.44775, 2.50487, 2.3659, 2.17252, 2.35776, 2.29781, 1.28993, 3.07166, 2.01969, 2.88725, 1.71388, 2.26543, 4.28182, 3.78568, 2.76968, 2.65104, 3.45952, 1.92924, 2.42831, 1.61135, 1.01623, 1.19143, 2.54149, 2.20036, 2.66337, 2.56786, 2.00073, 2.40418)
#PARAMETRO B
sv$value[sv$name == 'd'] <- c(1.69468, 0.58752, 0.9877, 1.12362, 2.22819, 3.80025, 0.95758, 2.57259, 1.777, 0.15609, 0.03244, 0.13822, 2.19782, -0.03765, 0.97948, 0.38498, 1.01697, 0.19193, 1.90444, 2.02542, 1.17266, 1.39005, 1.5026, 1.68911, 1.89127, 1.18084, 2.23369, 1.29656, 0.62256, 0.84553, 1.22895, 0.71695, 0.94064, 0.01848, 2.72331, 1.66707, 1.52847, 0.29908, -0.30412, 1.20769, 1.93466, 1.06727, 2.05471, 0.8684, 0.72028)
#PARAMETRO C
sv$value[sv$name == 'g'] <- c(0.29489, 0.17362, 0.20411, 0.11243, 0.24515, 0.02691, 0.04207, 0.3311, 0.06851, 0.14102, 0.1846, 0.03732, 0.05798, 0.17419, 0.05877, 0.17627, 0.29789, 0.21385, 0.1037, 0.14126, 0.15007, 0.14902, 0.13077, 0.18495, 0.25272, 0.20235, 0.10286, 0.10169, 0.1662, 0.08121, 0.13564, 0.24269, 0.21711, 0.15628, 0.17678, 0.29842, 0.12627, 0.14929, 0.19428, 0.21012, 0.24483, 0.09434, 0.36085, 0.16452, 0.21294)
sv$est <- FALSE
sv
#CRIAÇÃO DO MODELO
mod3 <- mirt(dados, 1, pars = sv)
#Extrai os coeficientes e salva em um data frame
coeficientes <- coef(mod3, simplify=TRUE, IRTpars=TRUE)
round(coeficientes$items, 3)
mod3$value[mod3$name == 'd'] <- c(1.69468, 0.58752, 0.9877, 1.12362, 2.22819, 3.80025, 0.95758, 2.57259, 1.777, 0.15609, 0.03244, 0.13822, 2.19782, -0.03765, 0.97948, 0.38498, 1.01697, 0.19193, 1.90444, 2.02542, 1.17266, 1.39005, 1.5026, 1.68911, 1.89127, 1.18084, 2.23369, 1.29656, 0.62256, 0.84553, 1.22895, 0.71695, 0.94064, 0.01848, 2.72331, 1.66707, 1.52847, 0.29908, -0.30412, 1.20769, 1.93466, 1.06727, 2.05471, 0.8684, 0.72028)
mod3$value[mod3$name == 'd'] <- c(1.69468, 0.58752, 0.9877, 1.12362, 2.22819, 3.80025, 0.95758, 2.57259, 1.777, 0.15609, 0.03244, 0.13822, 2.19782, -0.03765, 0.97948, 0.38498, 1.01697, 0.19193, 1.90444, 2.02542, 1.17266, 1.39005, 1.5026, 1.68911, 1.89127, 1.18084, 2.23369, 1.29656, 0.62256, 0.84553, 1.22895, 0.71695, 0.94064, 0.01848, 2.72331, 1.66707, 1.52847, 0.29908, -0.30412, 1.20769, 1.93466, 1.06727, 2.05471, 0.8684, 0.72028)
#Extrai os coeficientes e salva em um data frame
coeficientes <- coef(mod3, simplify=TRUE, IRTpars=TRUE)
round(coeficientes$items, 3)
mod3
#COLOCANDO VALORES PADRÕES NOS ITENS
sv <- mirt(dados, 1, itemtype = '3PL', pars = 'values')
#PARAMETRO A                  #I1 #I2  #I3...
sv$value[sv$name == 'a1'] <- c(2.97674, 2.74706, 1.61069, 2.91476, 2.1205, 0.29544, 0.50541, 1.57501, 1.51059, 2.79351, 1.45373, 1.94057, 3.90297, 1.54146, 0.54974, 2.66587, 0.8924, 1.44775, 2.50487, 2.3659, 2.17252, 2.35776, 2.29781, 1.28993, 3.07166, 2.01969, 2.88725, 1.71388, 2.26543, 4.28182, 3.78568, 2.76968, 2.65104, 3.45952, 1.92924, 2.42831, 1.61135, 1.01623, 1.19143, 2.54149, 2.20036, 2.66337, 2.56786, 2.00073, 2.40418)
#PARAMETRO B
sv$value[sv$name == 'd'] <- c(1.69468, 0.58752, 0.9877, 1.12362, 2.22819, 3.80025, 0.95758, 2.57259, 1.777, 0.15609, 0.03244, 0.13822, 2.19782, -0.03765, 0.97948, 0.38498, 1.01697, 0.19193, 1.90444, 2.02542, 1.17266, 1.39005, 1.5026, 1.68911, 1.89127, 1.18084, 2.23369, 1.29656, 0.62256, 0.84553, 1.22895, 0.71695, 0.94064, 0.01848, 2.72331, 1.66707, 1.52847, 0.29908, -0.30412, 1.20769, 1.93466, 1.06727, 2.05471, 0.8684, 0.72028)
#PARAMETRO C
sv$value[sv$name == 'g'] <- c(0.29489, 0.17362, 0.20411, 0.11243, 0.24515, 0.02691, 0.04207, 0.3311, 0.06851, 0.14102, 0.1846, 0.03732, 0.05798, 0.17419, 0.05877, 0.17627, 0.29789, 0.21385, 0.1037, 0.14126, 0.15007, 0.14902, 0.13077, 0.18495, 0.25272, 0.20235, 0.10286, 0.10169, 0.1662, 0.08121, 0.13564, 0.24269, 0.21711, 0.15628, 0.17678, 0.29842, 0.12627, 0.14929, 0.19428, 0.21012, 0.24483, 0.09434, 0.36085, 0.16452, 0.21294)
sv$est <- FALSE
sv
#CRIAÇÃO DO MODELO
mod3 <- mirt(dados, 1, pars = sv)
#Extrai os coeficientes e salva em um data frame
coeficientes <- coef(mod3, simplify=TRUE, IRTpars=TRUE)
round(coeficientes$items, 3)
#Comportamento Exame
scaleCharPlot(mod3)
#Infit: Pessoas de alto theta errando questões fáceis
#Outfit: pessoas de baixo theta acertando questões difíceis
itemfitPlot(mod3)
#FitPlots
#(Distribuição da população em infit e outfit)
personfitPlot(mod3)
#FitPlots
#Comportamento do Exame em Theta
itempersonMap(mod3)
#CCI ITENS
tracePlot(mod3)
#CCI TODOS OS ITENS
tracePlot(mod3, facet = F, legend = T) + scale_color_brewer(palette = "Set1")
#INFORMAÇÃ0 CURVAS ITENS
itemInfoPlot(mod3, facet = T)
# Calcula as pontuações latentes (notas) dos participantes
notas <- (fscores(mod3, method = 'EAP')*100)+500
(fscores(mod3, response.pattern = c(1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1,
0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0), method = 'EAP')*100)+500
install.packages("mirtCAT")
library(mirtCAT)
pars <- data.frame(a1 = c(1,.9,.8,1,1.1),
d = c(-1,0,1.5,-1.5,0),
g = c(.2,.15,.17,.19,.15))
mod <- generate.mirt_object(pars, itemtype = '3PL')
# trait scores for pattern: 0, 1, 1, 0, 1
fscores(mod, response.pattern = c(0,1,1,0,1))
coef(mod)
coef(mod, simplify=TRUE, IRTpars=TRUE)
dataParam = read.table(caminho_leitura, sep=',', h=T)
caminho_leitura <- file.path(caminho_pasta_script, "datatri.csv")
dataParam = read.table(caminho_leitura, sep=',', h=T)
head(dataParam)
View(dataParam)
a <- dataParam[,8]
b <- dataParam[,9]
c <- dataParam[,10]
d <- -a*b
if (length(a) == length(b)) {
d <- -a * b
# Faça algo com o resultado 'd' se necessário
} else {
# Lide com o caso em que a e b têm comprimentos diferentes
print("As colunas a e b têm comprimentos diferentes.")
}
length(a) == length(b)
d <- -a*b
a <-  as.numeric(gsub(",", ".", dataParam[,8]))
a <- as.numeric(gsub(",", ".", dataParam[,8]))
b <- as.numeric(gsub(",", ".", dataParam[,9]))
c <- as.numeric(gsub(",", ".", dataParam[,10]))
d <- -a*b
sv <- mirt(dados, 1, itemtype = '3PL', pars = 'values')
#PARAMETRO A                  #I1 #I2  #I3...
sv$value[sv$name == 'a1'] <- a
#PARAMETRO B
sv$value[sv$name == 'd'] <- d
#PARAMETRO C
sv$value[sv$name == 'g'] <- c
sv$est <- FALSE
#CRIAÇÃO DO MODELO
mod3 <- mirt(dados, 1, pars = sv)
#Extrai os coeficientes e salva em um data frame
coeficientes <- coef(mod3, simplify=TRUE, IRTpars=TRUE)
round(coeficientes$items, 3)
#Comportamento Exame
scaleCharPlot(mod3)
#install.packages("mirt")
library(mirt)
#install.packages("tidyverse")
library(tidyverse)
# install.packages("devtools")
# devtools::install_github("masurp/ggmirt")
library(ggmirt)
caminho_pasta_script <- getwd()
caminho_leitura <- file.path(caminho_pasta_script, "datatri.csv")
dataParam = read.table(caminho_leitura, sep=',', h=T)
dados <- sim_irt(500, 45)
a <- as.numeric(gsub(",", ".", dataParam[,8]))
b <- as.numeric(gsub(",", ".", dataParam[,9]))
c <- as.numeric(gsub(",", ".", dataParam[,10]))
d <- -a*b
#COLOCANDO VALORES PADRÕES NOS ITENS
sv <- mirt(dados, 1, itemtype = '3PL', pars = 'values')
#COLOCANDO VALORES PADRÕES NOS ITENS
sv <- mirt(dados, 1, itemtype = '3PL', pars = 'values')
#PARAMETRO A                  #I1 #I2  #I3...
sv$value[sv$name == 'a1'] <- a
#PARAMETRO B
sv$value[sv$name == 'd'] <- d
#PARAMETRO C
sv$value[sv$name == 'g'] <- c
sv$est <- FALSE
#CRIAÇÃO DO MODELO
mod3 <- mirt(dados, 1, pars = sv)
#Extrai os coeficientes e salva em um data frame
coeficientes <- coef(mod3, simplify=TRUE, IRTpars=TRUE)
round(coeficientes$items, 3)
#Especifica o caminho do arquivo CSV de saída
caminho_saida <- file.path(caminho_pasta_script, "resultados_coef.csv")
#Escreve os coeficientes no arquivo CSV
write.csv(coeficientes, file = caminho_saida, row.names = FALSE)
#Comportamento Exame
scaleCharPlot(mod3)
#Infit: Pessoas de alto theta errando questões fáceis
#Outfit: pessoas de baixo theta acertando questões difíceis
itemfitPlot(mod3)
#FitPlots
#(Distribuição da população em infit e outfit)
personfitPlot(mod3)
#FitPlots
#Comportamento do Exame em Theta
itempersonMap(mod3)
#CCI ITENS
tracePlot(mod3)
#CCI TODOS OS ITENS
tracePlot(mod3, facet = F, legend = T) + scale_color_brewer(palette = "Set1")
# Calcula as pontuações latentes (notas) dos participantes
notas <- (fscores(mod3, method = 'EAP')*100)+500
(fscores(mod3, response.pattern = c(1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1,
0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0), method = 'EAP')*100)+500
#Correlacao das Notas
sumscore <- rowSums(dados)
cor.test(notas, sumscore)
(fscores(mod3, response.pattern = c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1), method = 'EAP')*100)+500
#Correlacao das Notas
sumscore <- rowSums(dados)
# Adiciona as pontuações latentes ao conjunto de dados original
dados_com_notas <- cbind(dados, notas)
# Visualiza o conjunto de dados com as pontuações latentes
View(dados_com_notas)
#SCRIPT PARA PARÂMETROS JÁ FITADOS!
#install.packages("mirt")
library(mirt)
#install.packages("tidyverse")
library(tidyverse)
# install.packages("devtools")
# devtools::install_github("masurp/ggmirt")
library(ggmirt)
caminho_pasta_script <- getwd()
#SEM HEADER
caminho_leitura <- file.path(caminho_pasta_script, "dados.txt")
dados <- sim_irt(1500, 45)
caminho_leitura <- file.path(caminho_pasta_script, "datatri.csv")
dataParam = read.table(caminho_leitura, sep=',', h=T)
View(dataParam)
a <- as.numeric(gsub(",", ".", dataParam[,8]))
b <- as.numeric(gsub(",", ".", dataParam[,9]))
c <- as.numeric(gsub(",", ".", dataParam[,10]))
d <- -a*b
#COLOCANDO VALORES PADRÕES NOS ITENS
sv <- mirt(dados, 1, itemtype = '3PL', pars = 'values')
#PARAMETRO A                  #I1 #I2  #I3...
sv$value[sv$name == 'a1'] <- a
#PARAMETRO B
sv$value[sv$name == 'd'] <- d
#PARAMETRO C
sv$value[sv$name == 'g'] <- c
sv$est <- FALSE
#COLOCANDO VALORES PADRÕES NOS ITENS
sv <- mirt(dados, 1, itemtype = '3PL', pars = 'values')
#PARAMETRO A                  #I1 #I2  #I3...
sv$value[sv$name == 'a1'] <- a
#PARAMETRO B
sv$value[sv$name == 'd'] <- d
#PARAMETRO C
sv$value[sv$name == 'g'] <- c
sv$est <- FALSE
#CRIAÇÃO DO MODELO
mod3 <- mirt(dados, 1, pars = sv)
#Extrai os coeficientes e salva em um data frame
coeficientes <- coef(mod3, simplify=TRUE, IRTpars=TRUE)
round(coeficientes$items, 3)
#Comportamento Exame
scaleCharPlot(mod3)
#Infit: Pessoas de alto theta errando questões fáceis
#Outfit: pessoas de baixo theta acertando questões difíceis
itemfitPlot(mod3)
#FitPlots
#(Distribuição da população em infit e outfit)
personfitPlot(mod3)
#FitPlots
#Comportamento do Exame em Theta
itempersonMap(mod3)
#CCI ITENS
tracePlot(mod3)
#CCI TODOS OS ITENS
tracePlot(mod3, facet = F, legend = T) + scale_color_brewer(palette = "Set1")
#INFORMAÇÃ0 CURVAS ITENS
itemInfoPlot(mod3, facet = T)
# INFORMAÇÀO DO TESTE (NOTAS MAX E MIN)
testInfoPlot(mod3, adj_factor = 2)
# Calcula as pontuações latentes (notas) dos participantes
notas <- (fscores(mod3, method = 'EAP')*100)+500
(fscores(mod3, response.pattern = c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1), method = 'EAP')*100)+500
(fscores(mod3, response.pattern = c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), method = 'EAP')*100)+500
View(notas)
View(notas)
#F1 - PARA RESPOSTAS MÍNIMAS
(fscores(mod3, response.pattern = c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), method = 'EAP')*100)+500
#install.packages("mirt")
library(mirt)
#install.packages("tidyverse")
library(tidyverse)
# install.packages("devtools")
# devtools::install_github("masurp/ggmirt")
library(ggmirt)
caminho_pasta_script <- getwd()
dados <- sim_irt(18000, 45)
View(dados)
caminho_leitura <- file.path(caminho_pasta_script, "datatri.csv")
dataParam = read.table(caminho_leitura, sep=',', h=T)
View(dataParam)
a <- as.numeric(gsub(",", ".", dataParam[,8]))
b <- as.numeric(gsub(",", ".", dataParam[,9]))
c <- as.numeric(gsub(",", ".", dataParam[,10]))
d <- -a*b
#COLOCANDO VALORES PADRÕES NOS ITENS
sv <- mirt(dados, 1, itemtype = '3PL', pars = 'values')
#PARAMETRO A                  #I1 #I2  #I3...
sv$value[sv$name == 'a1'] <- a
#PARAMETRO B
sv$value[sv$name == 'd'] <- d
#PARAMETRO C
sv$value[sv$name == 'g'] <- c
sv$est <- FALSE
#CRIAÇÃO DO MODELO
mod3 <- mirt(dados, 1, pars = sv)
#Extrai os coeficientes e salva em um data frame
coeficientes <- coef(mod3, simplify=TRUE, IRTpars=TRUE)
round(coeficientes$items, 3)
#Especifica o caminho do arquivo CSV de saída
caminho_saida <- file.path(caminho_pasta_script, "resultados_coef.csv")
#Escreve os coeficientes no arquivo CSV
write.csv(coeficientes, file = caminho_saida, row.names = FALSE)
#Comportamento Exame
scaleCharPlot(mod3)
#Infit: Pessoas de alto theta errando questões fáceis
#Outfit: pessoas de baixo theta acertando questões difíceis
itemfitPlot(mod3)
#FitPlots
#(Distribuição da população em infit e outfit)
personfitPlot(mod3)
#FitPlots
#Comportamento do Exame em Theta
itempersonMap(mod3)
#CCI TODOS OS ITENS
tracePlot(mod3, facet = F, legend = T) + scale_color_brewer(palette = "Set1")
# INFORMAÇÀO DO TESTE (NOTAS MAX E MIN)
testInfoPlot(mod3, adj_factor = 2)
# Calcula as pontuações latentes (notas) dos participantes
notas <- (fscores(mod3, method = 'EAP')*100)+500
View(notas)
(fscores(mod3, response.pattern = c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1), method = 'EAP')*100)+500
(fscores(mod3, response.pattern = c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), method = 'EAP')*100)+500
#Correlacao das Notas
sumscore <- rowSums(dados)
cor.test(notas, sumscore)
# Adiciona as pontuações latentes ao conjunto de dados original
dados_com_notas <- cbind(dados, notas)
# Visualiza o conjunto de dados com as pontuações latentes
View(dados_com_notas)
#install.packages("mirt")
library(mirt)
#install.packages("tidyverse")
library(tidyverse)
# install.packages("devtools")
# devtools::install_github("masurp/ggmirt")
library(ggmirt)
#SEM HEADER
caminho_leitura <- file.path(caminho_pasta_script, "dados.txt")
dados <- read.delim(caminho_leitura, header = FALSE)
View(dados)
caminho_pasta_script <- getwd()
#SEM HEADER
caminho_leitura <- file.path(caminho_pasta_script, "dados.txt")
dados <- read.delim(caminho_leitura, header = FALSE)
#Ajusta o modelo TRI 3PL
mod3 <- mirt(dados, 1, itemtype = '3PL', technical = list(NCYCLES = 10000))
#install.packages("mirt")
library(mirt)
#install.packages("tidyverse")
library(tidyverse)
# install.packages("devtools")
# devtools::install_github("masurp/ggmirt")
library(ggmirt)
caminho_pasta_script <- getwd()
dados <- sim_irt(5000, 45)
View(dados)
#Ajusta o modelo TRI 3PL
mod3 <- mirt(dados, 1, itemtype = '3PL', technical = list(NCYCLES = 10000))
#install.packages("mirt")
library(mirt)
#install.packages("tidyverse")
library(tidyverse)
# install.packages("devtools")
# devtools::install_github("masurp/ggmirt")
library(ggmirt)
#install.packages("mirt")
library(mirt)
#install.packages("tidyverse")
library(tidyverse)
# install.packages("devtools")
# devtools::install_github("masurp/ggmirt")
library(ggmirt)
caminho_pasta_script <- getwd()
dados <- sim_irt(200, 45)
View(dados)
caminho_leitura <- file.path(caminho_pasta_script, "datatri.csv")
dataParam = read.table(caminho_leitura, sep=',', h=T)
View(dataParam)
a <- as.numeric(gsub(",", ".", dataParam[,8]))
b <- as.numeric(gsub(",", ".", dataParam[,9]))
c <- as.numeric(gsub(",", ".", dataParam[,10]))
d <- -a*b
#COLOCANDO VALORES PADRÕES NOS ITENS
sv <- mirt(dados, 1, itemtype = '3PL', pars = 'values')
#PARAMETRO A                  #I1 #I2  #I3...
sv$value[sv$name == 'a1'] <- a
#PARAMETRO D
sv$value[sv$name == 'd'] <- d
#PARAMETRO C
sv$value[sv$name == 'g'] <- c
sv$est <- FALSE
#CRIAÇÃO DO MODELO
mod3 <- mirt(dados, 1, pars = sv)
#Extrai os coeficientes e salva em um data frame
coeficientes <- coef(mod3, simplify=TRUE, IRTpars=TRUE)
round(coeficientes$items, 3)
View(dataParam)
#F1 - PARA RESPOSTAS MÁXIMAS
2(fscores(mod3, response.pattern = c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1), method = 'EAP')*100)+500
#F1 - PARA RESPOSTAS MÁXIMAS
(fscores(mod3, response.pattern = c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1), method = 'EAP')*100)+500
#F1 - PARA RESPOSTAS MÍNIMAS
(fscores(mod3, response.pattern = c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), method = 'EAP')*100)+500
caminho_pasta_script <- getwd()
caminho_leitura <- file.path(caminho_pasta_script, "datatri.csv")
dataParam = read.table(caminho_leitura, sep=',', h=T)
View(dataParam)
a <- as.numeric(gsub(",", ".", dataParam[,8]))
class(a)
